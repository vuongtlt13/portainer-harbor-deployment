
worker_processes auto;
pid /tmp/nginx.pid;

events {
    worker_connections  1024;
}

http {

    client_body_temp_path /tmp/client_body_temp;
    proxy_temp_path /tmp/proxy_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    log_format timed_combined '$remote_addr - '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" '
    '$request_time $upstream_response_time $pipe';

    access_log /dev/stdout timed_combined;

    map $http_x_forwarded_proto $x_forwarded_proto {
      default $http_x_forwarded_proto;
      ""      $scheme;
    }

    server {
        listen 8080;
        server_name  harbor-portal;

        root   /usr/share/nginx/html;
        index  index.html index.htm;
        include /etc/nginx/mime.types;
        
        # customized location config file can place to /etc/nginx/etc with prefix harbor.http. and suffix .conf
        include /etc/nginx/conf.d/harbor.http.*.conf;

        gzip on;
        gzip_min_length 1000;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        location /devcenter-api-2.0 {
            try_files $uri $uri/ /swagger-ui-index.html;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }

        location = /index.html {
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        location /c/ {
            proxy_pass http://core:8080/c/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $x_forwarded_proto;

            proxy_buffering off;
            proxy_request_buffering off;
        }

        location /api/ {
            proxy_pass http://core:8080/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $x_forwarded_proto;

            proxy_buffering off;
            proxy_request_buffering off;
        }

        location /v1/ {
            return 404;
        }

        location /v2/ {
            proxy_pass http://core:8080/v2/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $x_forwarded_proto;
            proxy_buffering off;
            proxy_request_buffering off;

            proxy_send_timeout 900;
            proxy_read_timeout 900;
        }

        location /service/ {
            proxy_pass http://core:8080/service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $x_forwarded_proto;

            proxy_buffering off;
            proxy_request_buffering off;
        }

        location /service/notifications {
            return 404;
        }
    }
}